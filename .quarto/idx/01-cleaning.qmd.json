{"title":"Cleaning","markdown":{"yaml":{"title":"Cleaning"},"headingText":"Setting up the project","containsRefs":false,"markdown":"\n\n\nHere I am loading the special libraries I need in order to clean my data. For this specific project I will need rvest and httr2 in order to pull out data that is not readily available for me to download.\n\n```{r}\nlibrary(tidyverse)\nlibrary(janitor)\nlibrary(rvest)\nlibrary(httr2)\n```\n\n## Getting the html \n\nBecause I can't directly load the data into my computer, here I will get the html that I want to scrape the data from.\n\n```{r}\n# url <- \"https://planestrategico.conl.mx/indicadores/detalle/ods/242/datos?page\"\nurl <- \"https://planestrategico.conl.mx/indicadores/detalle/ods/242/datos?page=2\"\n\nhtml <- read_html(url)\n```\n\nI am asking the function to specifically scrape for information in a table format. To be able to identify what I need, I used the inspector function in my computer browser. To start I want to look at the index of climate change awareness of each state, or how responsible state entities are of their natural resources. This includes water efficiency, deforestation protection and much more. States are graded on a scale from 0 to 100, where the higher the score the better the better the performance.\n\n```{r}\ntables <- html |> html_table()\n\ntables[[1]]\n\ntables |> _[[1]]\n```\n\nThis is now a list of tibbles not a tibble. \n\n## Spanish terminology\n\nThe first variable \"UNIDAD GEOGRÁFICA STR\" refers to the geographical region of each entity in the variable list, in this case the data is evaluated at the state level. \n\n\"VALOR\" stands for value. \n\n\"AÑO\"stands for year, which is also shown as \"ano\". \n\n\"CVE UNIDAD GRÁFICA\" represents different numbers assigned to each state. For example, the state of Nuevo León is number 19. We will largely ignore these variables in this analysis. \n\n## Function to parse page \n\nHere we parse the page by using a function. This is also cleaning the names and making sure that they are easier for me to work with.\n\n```{r}\nparse_page <- function(our_url) {\n  our_url |> \n    read_html() |> \n    html_table() |> _[[1]] |> \n    clean_names() |> \n    mutate(valor = valor |> as.character() |> parse_number())\n}\n\n# We test this by feeding it the url variable we also used above here is the function\nparse_page(url)\n```\n\nIn the function we also added the parse.number() in the function to ensure that it reads every valor variable as a number and not a character. \n\n## Get and combine the pages \n\nThis is where I get the data. The data is not just from the main page table, but all tables in the same url.\n\n```{r}\n# This range has to be valid. See how many pages are in the table\ni <- 1:39\n\n# This creates a list of urls based on that range\nurls <- str_glue(\"https://planestrategico.conl.mx/indicadores/detalle/ods/242/datos?page={i}\")\n\n# This takes that list of urls and then runs our parse_page() function on each one.\n# The result is a list tibbles, i.e., a table from each page\nrequests <- map(urls, parse_page)\n\n# list_rbind is a special function that binds a list of tibbles into a single one\nclimate_data <- requests |> list_rbind() \n\n# here we just peek at the table\nclimate <- climate_data |> mutate(source= \"climate\")\n\nclimate\n```\n\nWe take all the pages that we want. In this example we have all 39 pages of data scraped. I also attributed these specific variables to the name \"climate\" to be able to identify what we are looking at. \n\n## Adding more data from other variables\n\nNow I want to add other variables so that later I can form a more complete analysis. I added to my data the percentage of water insecurity by each Mexican state. I named this variable water_insecurity. \n\nHere is the same process with the url for water_insecurity:\n\n```{r}\n# This range has to be valid. See how many pages are in the table\ni <- 1:7\n\n# This creates a list of urls based on that range\nurls <- str_glue(\"https://planestrategico.conl.mx/indicadores/detalle/ods/934/datos?page={i}\")\n\n# This takes that list of urls and then runs our parse_page() function on each one.\n# The result is a list tibbles, i.e., a table from each page\nrequests <- map(urls, parse_page)\n\n# list_rbind is a special function that binds a list of tibbles into a single one\nwater_insecurity_data <- requests |> list_rbind()\n\n# here we just peek at the table\nwater_insecurity <- water_insecurity_data |> \n  mutate(source = \"water_insecurity\")\n\nwater_insecurity\n```\n\nNotice how the only element that changes in the url is the attached number in the source variable.\n\nNow I want to add the data for average annual availability of groundwater. This variable is in units of millions of cubic meters per year. This also takes into account the amount of water that can be used in many ways without harming the environment with its extraction. I called this variable groundwater for simplicity. \n\nHere is the data pulled for groundwater: \n\n```{r}\ni <- 1:7\n\nurls <- str_glue(\"https://planestrategico.conl.mx/indicadores/detalle/ods/122/datos?page={i}\")\n\nrequests <- map(urls, parse_page)\n\ngroundwater_data <- requests |> list_rbind()\n\ngroundwater <- groundwater_data |> \n  mutate(source = \"groundwater\")\n\ngroundwater\n\n\n```\n\nNow I will add data that looks at the number of hectares reforested by year in each state. This looks specifically at reforestation efforts. I called this variable reforestation. \n\nHere is the data pulled for reforestation: \n\n```{r}\ni <- 1:53\n\nurls <- str_glue(\"https://planestrategico.conl.mx/indicadores/detalle/ods/135/datos?page={i}\")\n\nrequests <- map(urls, parse_page)\n\nreforestation_data <- requests |> list_rbind()\n\nreforestation <- reforestation_data |> \n  mutate(source = \"reforestation\")\n\nreforestation\n```\n\n\n\n\n## Combine the data \n\nIn order to export and analyze my data I combined all of the variables together. Since they all have the same table format, it was easy to make each one match up. \n\n```{r}\nall_the_data <- bind_rows(climate, \n water_insecurity, groundwater, reforestation)\n\nall_the_data\n```\n\nNow I have all the data filter source in place, and with the source name I can differentiate and tell what each number means. \n\n## Exporing the data \n\nI will export my cleaned data to a folder. \n\n```{r}\nall_the_data |> write_rds(\"data-processed/01-finaldata.rds\")\n```\n\n\n\n\n\n\n","srcMarkdownNoYaml":"\n\n## Setting up the project \n\nHere I am loading the special libraries I need in order to clean my data. For this specific project I will need rvest and httr2 in order to pull out data that is not readily available for me to download.\n\n```{r}\nlibrary(tidyverse)\nlibrary(janitor)\nlibrary(rvest)\nlibrary(httr2)\n```\n\n## Getting the html \n\nBecause I can't directly load the data into my computer, here I will get the html that I want to scrape the data from.\n\n```{r}\n# url <- \"https://planestrategico.conl.mx/indicadores/detalle/ods/242/datos?page\"\nurl <- \"https://planestrategico.conl.mx/indicadores/detalle/ods/242/datos?page=2\"\n\nhtml <- read_html(url)\n```\n\nI am asking the function to specifically scrape for information in a table format. To be able to identify what I need, I used the inspector function in my computer browser. To start I want to look at the index of climate change awareness of each state, or how responsible state entities are of their natural resources. This includes water efficiency, deforestation protection and much more. States are graded on a scale from 0 to 100, where the higher the score the better the better the performance.\n\n```{r}\ntables <- html |> html_table()\n\ntables[[1]]\n\ntables |> _[[1]]\n```\n\nThis is now a list of tibbles not a tibble. \n\n## Spanish terminology\n\nThe first variable \"UNIDAD GEOGRÁFICA STR\" refers to the geographical region of each entity in the variable list, in this case the data is evaluated at the state level. \n\n\"VALOR\" stands for value. \n\n\"AÑO\"stands for year, which is also shown as \"ano\". \n\n\"CVE UNIDAD GRÁFICA\" represents different numbers assigned to each state. For example, the state of Nuevo León is number 19. We will largely ignore these variables in this analysis. \n\n## Function to parse page \n\nHere we parse the page by using a function. This is also cleaning the names and making sure that they are easier for me to work with.\n\n```{r}\nparse_page <- function(our_url) {\n  our_url |> \n    read_html() |> \n    html_table() |> _[[1]] |> \n    clean_names() |> \n    mutate(valor = valor |> as.character() |> parse_number())\n}\n\n# We test this by feeding it the url variable we also used above here is the function\nparse_page(url)\n```\n\nIn the function we also added the parse.number() in the function to ensure that it reads every valor variable as a number and not a character. \n\n## Get and combine the pages \n\nThis is where I get the data. The data is not just from the main page table, but all tables in the same url.\n\n```{r}\n# This range has to be valid. See how many pages are in the table\ni <- 1:39\n\n# This creates a list of urls based on that range\nurls <- str_glue(\"https://planestrategico.conl.mx/indicadores/detalle/ods/242/datos?page={i}\")\n\n# This takes that list of urls and then runs our parse_page() function on each one.\n# The result is a list tibbles, i.e., a table from each page\nrequests <- map(urls, parse_page)\n\n# list_rbind is a special function that binds a list of tibbles into a single one\nclimate_data <- requests |> list_rbind() \n\n# here we just peek at the table\nclimate <- climate_data |> mutate(source= \"climate\")\n\nclimate\n```\n\nWe take all the pages that we want. In this example we have all 39 pages of data scraped. I also attributed these specific variables to the name \"climate\" to be able to identify what we are looking at. \n\n## Adding more data from other variables\n\nNow I want to add other variables so that later I can form a more complete analysis. I added to my data the percentage of water insecurity by each Mexican state. I named this variable water_insecurity. \n\nHere is the same process with the url for water_insecurity:\n\n```{r}\n# This range has to be valid. See how many pages are in the table\ni <- 1:7\n\n# This creates a list of urls based on that range\nurls <- str_glue(\"https://planestrategico.conl.mx/indicadores/detalle/ods/934/datos?page={i}\")\n\n# This takes that list of urls and then runs our parse_page() function on each one.\n# The result is a list tibbles, i.e., a table from each page\nrequests <- map(urls, parse_page)\n\n# list_rbind is a special function that binds a list of tibbles into a single one\nwater_insecurity_data <- requests |> list_rbind()\n\n# here we just peek at the table\nwater_insecurity <- water_insecurity_data |> \n  mutate(source = \"water_insecurity\")\n\nwater_insecurity\n```\n\nNotice how the only element that changes in the url is the attached number in the source variable.\n\nNow I want to add the data for average annual availability of groundwater. This variable is in units of millions of cubic meters per year. This also takes into account the amount of water that can be used in many ways without harming the environment with its extraction. I called this variable groundwater for simplicity. \n\nHere is the data pulled for groundwater: \n\n```{r}\ni <- 1:7\n\nurls <- str_glue(\"https://planestrategico.conl.mx/indicadores/detalle/ods/122/datos?page={i}\")\n\nrequests <- map(urls, parse_page)\n\ngroundwater_data <- requests |> list_rbind()\n\ngroundwater <- groundwater_data |> \n  mutate(source = \"groundwater\")\n\ngroundwater\n\n\n```\n\nNow I will add data that looks at the number of hectares reforested by year in each state. This looks specifically at reforestation efforts. I called this variable reforestation. \n\nHere is the data pulled for reforestation: \n\n```{r}\ni <- 1:53\n\nurls <- str_glue(\"https://planestrategico.conl.mx/indicadores/detalle/ods/135/datos?page={i}\")\n\nrequests <- map(urls, parse_page)\n\nreforestation_data <- requests |> list_rbind()\n\nreforestation <- reforestation_data |> \n  mutate(source = \"reforestation\")\n\nreforestation\n```\n\n\n\n\n## Combine the data \n\nIn order to export and analyze my data I combined all of the variables together. Since they all have the same table format, it was easy to make each one match up. \n\n```{r}\nall_the_data <- bind_rows(climate, \n water_insecurity, groundwater, reforestation)\n\nall_the_data\n```\n\nNow I have all the data filter source in place, and with the source name I can differentiate and tell what each number means. \n\n## Exporing the data \n\nI will export my cleaned data to a folder. \n\n```{r}\nall_the_data |> write_rds(\"data-processed/01-finaldata.rds\")\n```\n\n\n\n\n\n\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["styles.css"],"toc":true,"output-file":"01-cleaning.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.4.549","theme":"cosmo","title":"Cleaning"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}